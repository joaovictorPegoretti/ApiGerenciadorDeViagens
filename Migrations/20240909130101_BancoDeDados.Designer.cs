// <auto-generated />
using System;
using ApiGerenciadorDeViagens.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiGerenciadorDeViagens.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240909130101_BancoDeDados")]
    partial class BancoDeDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiGerenciadorDeViagens.Modelos.Modelo_Passagens", b =>
                {
                    b.Property<Guid>("NumeroPassagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Checkin")
                        .HasColumnType("boolean");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormaDePagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdViagem")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ViagensId")
                        .HasColumnType("uuid");

                    b.Property<int>("assentos")
                        .HasColumnType("integer");

                    b.HasKey("NumeroPassagem");

                    b.HasIndex("UsuarioCPF");

                    b.HasIndex("ViagensId");

                    b.ToTable("Tabela_Passagem");
                });

            modelBuilder.Entity("ApiGerenciadorDeViagens.Modelos.Modelo_Usuario", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco_Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco_Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco_Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone_Celular")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone_Fixo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CPF");

                    b.ToTable("Tabela_Usuario");
                });

            modelBuilder.Entity("ApiGerenciadorDeViagens.Modelos.Modelo_Viagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cadeiras")
                        .HasColumnType("integer");

                    b.Property<string>("Companhia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Precos")
                        .HasColumnType("double precision");

                    b.Property<string>("dataIda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dataVolta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("horaIda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("horaVolta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tabela_Viagem");
                });

            modelBuilder.Entity("ApiGerenciadorDeViagens.Modelos.Modelo_Passagens", b =>
                {
                    b.HasOne("ApiGerenciadorDeViagens.Modelos.Modelo_Usuario", "Usuario")
                        .WithMany("Passagem")
                        .HasForeignKey("UsuarioCPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiGerenciadorDeViagens.Modelos.Modelo_Viagem", "Viagens")
                        .WithMany("Passagens")
                        .HasForeignKey("ViagensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Viagens");
                });

            modelBuilder.Entity("ApiGerenciadorDeViagens.Modelos.Modelo_Usuario", b =>
                {
                    b.Navigation("Passagem");
                });

            modelBuilder.Entity("ApiGerenciadorDeViagens.Modelos.Modelo_Viagem", b =>
                {
                    b.Navigation("Passagens");
                });
#pragma warning restore 612, 618
        }
    }
}
